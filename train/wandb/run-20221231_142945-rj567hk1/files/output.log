Logging model files to ./chkp/12-31-2022_14:29:45
TRAINING MODEL: regressor
Training on CPU
************* EPOCH: 1 *************
> /Users/stephennelson/Projects/Learning-Frustum-Proposals/models/pointnet.py(163)forward()
-> x = self.conv_layers[0](x)
(Pdb)
(Pdb) x.shape
torch.Size([1, 3, 262])

(Pdb) self.conv_layers[0](x)
tensor([[[ 1.0723e+06, -1.2344e+00,  2.8119e+31,  ..., -1.0374e+23,
          -1.8471e-01, -2.2699e+00],
         [-9.9692e+05,  5.5182e-02, -3.7221e+31,  ..., -9.6328e+22,
          -9.0251e-02,  1.4891e+00],
         [ 3.9463e+05, -3.0284e-01,  1.4943e+31,  ..., -3.6771e+23,
           1.0141e+00, -8.7934e-01],
         ...,
         [-9.7259e+04,  2.4977e-01,  1.7092e+31,  ..., -4.1045e+23,
           1.0538e+00, -4.9179e-01],
         [ 7.6424e+04, -9.1912e-01, -3.0004e+31,  ...,  3.2684e+23,
          -1.2201e+00,  3.6849e-01],
         [ 5.0212e+03,  4.4195e-01,  3.8505e+31,  ...,  3.7775e+23,
          -1.5281e+00, -1.1950e+00]]], grad_fn=<SqueezeBackward1>)
(Pdb) self.conv_layers[0](x).shape
torch.Size([1, 64, 262])
(Pdb)
  0%|                                                                                                                                                                                                                                 | 0/1 [00:11<?, ?it/s]
Traceback (most recent call last):
  File "train_frustum_neonet.py", line 101, in <module>
    main(args)
  File "train_frustum_neonet.py", line 89, in main
    trainer.fit()
  File "/Users/stephennelson/Projects/Learning-Frustum-Proposals/trainers/base_trainer.py", line 345, in fit
    y_hat = self._batch_prediction(inputs).to(self.device)
  File "/Users/stephennelson/Projects/Learning-Frustum-Proposals/trainers/learned_frustum_trainer.py", line 54, in _batch_prediction
    y_hat = self.model(
  File "/opt/anaconda3/envs/thesis/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/Users/stephennelson/Projects/Learning-Frustum-Proposals/models/frustum_neonet.py", line 31, in forward
    y_hat = self.output_head(h)
  File "/opt/anaconda3/envs/thesis/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/Users/stephennelson/Projects/Learning-Frustum-Proposals/models/regressor.py", line 40, in forward
    h = self.weights(x)
  File "/opt/anaconda3/envs/thesis/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/opt/anaconda3/envs/thesis/lib/python3.8/site-packages/torch/nn/modules/container.py", line 139, in forward
    input = module(input)
  File "/opt/anaconda3/envs/thesis/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/opt/anaconda3/envs/thesis/lib/python3.8/site-packages/torch/nn/modules/linear.py", line 96, in forward
    return F.linear(input, self.weight, self.bias)
  File "/opt/anaconda3/envs/thesis/lib/python3.8/site-packages/torch/nn/functional.py", line 1847, in linear
    return torch._C._nn.linear(input, weight, bias)

(Pdb) continue