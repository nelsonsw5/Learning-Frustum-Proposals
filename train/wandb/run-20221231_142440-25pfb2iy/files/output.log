
  0%|                                                                                                                               | 0/1 [00:00<?, ?it/s]
Logging model files to ./chkp/12-31-2022_14:24:39
TRAINING MODEL: regressor
Training on CPU
************* EPOCH: 1 *************
> /Users/stephennelson/Projects/Learning-Frustum-Proposals/models/pointnet.py(163)forward()
-> x = self.conv_layers[0](x)
(Pdb) x.shape
torch.Size([1, 3, 262])
(Pdb) self.conv_layers[0]
Conv1d(3, 64, kernel_size=(1,), stride=(1,))




(Pdb) self.conv_layers[0](x)
tensor([[[-7.2006e+05,  1.3146e+00,  3.8895e+31,  ..., -9.3726e+22,
          -8.1919e-02, -4.4758e-01],
         [ 4.1768e+05, -8.1050e-01, -1.4382e+30,  ..., -9.8742e+22,
           3.7445e-02, -6.8678e-01],
         [ 7.8183e+05, -5.7360e-01,  1.0905e+31,  ...,  1.8689e+23,
          -4.2635e-01, -9.2038e-01],
         ...,
         [-3.7894e+05,  2.7223e-01,  9.6362e+30,  ...,  9.3836e+22,
          -6.8341e-01, -1.9438e-01],
         [ 1.0354e+06, -1.0986e+00, -7.1639e+30,  ...,  3.6452e+23,
          -8.1912e-01, -6.3887e-01],
         [-3.1593e+05,  1.0388e+00,  3.7611e+31,  ..., -3.5670e+23,
           9.8184e-01, -6.0826e-01]]], grad_fn=<SqueezeBackward1>)

(Pdb) self.conv_layers[0](x).shape
torch.Size([1, 64, 262])
(Pdb) x = self.conv_layers[0](x)
(Pdb) x.shape
torch.Size([1, 64, 262])
(Pdb) self.bn_layers[0](x).shape
torch.Size([1, 64, 262])
